name: Unit Tests and deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: true
      matrix:
        operating-system: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.12", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        working-directory: my_project
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip list

      - name: Set credentials path
        shell: bash
        run: |
          echo "CREDENTIALS_PATH=$RUNNER_TEMP/credentials.json" >> $GITHUB_ENV

      - name: Get data
        working-directory: my_project
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_CREDENTIALS_DATA }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > "$CREDENTIALS_PATH"
          dvc remote add -d my_remote gs://dtu_mlops_osquera
          dvc remote modify my_remote  credentialpath "$CREDENTIALS_PATH"
          dvc pull -r my_remote


      - name: Run tests & coverage
        working-directory: my_project
        run: |
          coverage run -m pytest tests/
          coverage report -m

  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set credentials path
        shell: bash
        run: |
          echo "CREDENTIALS_PATH=$RUNNER_TEMP/credentials.json" >> $GITHUB_ENV

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Submit build
        working-directory: my_project
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_CREDENTIALS_DATA }}
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGISTRY: ${{ secrets.GCP_REGISTRY }}
        run: gcloud builds submit --config cloudbuild_containers.yaml
