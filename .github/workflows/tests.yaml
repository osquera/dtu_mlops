name: Unit Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: true
      matrix:
        operating-system: ["ubuntu-latest", "windows-latest", "macos-latest"]
        python-version: ["3.12", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        working-directory: my_project
        run: |
          python -m pip install -U pip setuptools wheel
          pip install -r requirements.txt
          pip list

      - name: Set credentials path
        shell: bash
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            echo "CREDENTIALS_PATH=%RUNNER_TEMP%\\credentials.json" >> $GITHUB_ENV
          else
            echo "CREDENTIALS_PATH=$RUNNER_TEMP/credentials.json" >> $GITHUB_ENV
          fi

      - name: Get data
        working-directory: my_project
        shell: bash
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_CREDENTIALS_DATA }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > "$CREDENTIALS_PATH"
          dvc remote add -d storage -f gs://dtu_mlops_osquera
          dvc remote modify storage -f credentialpath "$CREDENTIALS_PATH"
          dvc pull -r storage


      - name: Run tests & coverage
        working-directory: my_project
        run: |
          coverage run -m pytest tests/
          coverage report -m
